#!/usr/bin/env swipl
% cat1

:- use_module(library(dcg/basics)).  % For basic DCG utilities
:- use_module(library(pure_input)). % For phrase_from_file/2

% Define the structure (objects and relations)

lines([L|Ls]) --> line(L), lines(Ls).
lines([])     --> [].

line(Line) --> string_without("\n", Cs), "\n", { atom_codes(Line, Cs) }.

output_lines(_, [], _) --> [].
output_lines(Stream, [Line|Rest], N) -->
    {
        format(Stream, '~d ~s~n', [N, Line]),
        N1 is N + 1
    },
    output_lines(Stream, Rest, N1).

% Do the work using the structure

:- initialization(main, main).

main([File]) :-
    phrase_from_file(lines(Lines), File),
    current_output(Stream),
    phrase(output_lines(Stream, Lines, 1), _).

/*
./cat1 reverse.pl
1 %% reverse.pl
...
33 
*/